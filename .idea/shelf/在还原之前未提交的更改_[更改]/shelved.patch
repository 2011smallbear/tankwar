Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import random  # 导入random模块\r\nimport sys\r\n\r\nimport pygame\r\nfrom pygame.sprite import Sprite\r\n\r\n__author__ = 'XSY'\r\ndic = 'up'\r\nbad_tank_number = 5\r\n\r\n\r\nclass Settings:\r\n    \"\"\"存储游戏所有设置的类\"\"\"\r\n\r\n    def __init__(self):\r\n        self.screen_width = 900\r\n        self.screen_height = 900\r\n        self.bg_color = (230, 230, 230)\r\n        self.tank_speed = 1.2\r\n        self.bullet_speed = 2.0\r\n        self.bullet_width = 7\r\n        self.bullet_height = 7\r\n        self.bullet_color = (60, 60, 60)\r\n        self.bad_tank_speed = 0.1  # 增加坏坦克的速度属性\r\n\r\n\r\n\r\nclass BadTank(Sprite):\r\n    \"\"\"管理坏坦克的类\"\"\"\r\n\r\n    def __init__(self, game, speed):\r\n        super().__init__()\r\n        self.screen = game.screen\r\n        self.settings = game.settings\r\n        self.image = pygame.image.load('image/turn0bad.png')\r\n        self.rect = self.image.get_rect()\r\n        self.rect.x = self.rect.width\r\n        self.rect.y = self.rect.height\r\n        self.x = float(self.rect.x)\r\n        self.y = float(self.rect.y)\r\n        self.speed = speed  # 使用传入的速度参数\r\n\r\n    def update(self):\r\n        \"\"\"随机移动坏坦克\"\"\"\r\n        move_direction = random.choice(['up', 'down', 'left', 'right'])\r\n        random_number = random.randint(700, 800)\r\n        for _ in range(random_number):\r\n            # 移动和改变坦克图片\r\n            if move_direction == 'up' and self.rect.top > 0:\r\n                self.y -= self.speed\r\n                self.image = pygame.image.load('image/turn0bad.png')\r\n            elif move_direction == 'down' and self.rect.bottom < self.screen.get_rect().bottom:\r\n                self.y += self.speed\r\n                self.image = pygame.image.load('image/turn180bad.png')\r\n            elif move_direction == 'left' and self.rect.left > 0:\r\n                self.x -= self.speed\r\n                self.image = pygame.image.load('image/turn270bad.png')\r\n            elif move_direction == 'right' and self.rect.right < self.screen.get_rect().right:\r\n                self.x += self.speed\r\n                self.image = pygame.image.load('image/turn90bad.png')\r\n\r\n        self.rect.x = self.x\r\n        self.rect.y = self.y\r\n\r\n\r\nclass Bullet(Sprite):\r\n    \"\"\"管理子弹的类\"\"\"\r\n\r\n    def __init__(self, game):\r\n        super().__init__()\r\n        self.screen = game.screen\r\n        self.settings = game.settings\r\n        self.color = self.settings.bullet_color\r\n        self.rect = pygame.Rect(0, 0, self.settings.bullet_width, self.settings.bullet_height)\r\n        self.rect.midtop = game.good_tank.rect.midtop\r\n        self.y = float(self.rect.y)\r\n        self.x = float(self.rect.x)\r\n        self.dic = game.dic\r\n\r\n    def update(self):\r\n        if self.dic == 'up':\r\n            self.y -= self.settings.bullet_speed\r\n        elif self.dic == 'down':\r\n            self.y += self.settings.bullet_speed\r\n        elif self.dic == 'right':\r\n            self.x += self.settings.bullet_speed\r\n        elif self.dic == 'left':\r\n            self.x -= self.settings.bullet_speed\r\n        self.rect.y = self.y\r\n        self.rect.x = self.x\r\n\r\n    def draw(self):\r\n        \"\"\"在屏幕上绘制子弹\"\"\"\r\n        pygame.draw.rect(self.screen, self.color, self.rect)\r\n\r\n\r\nclass GoodTank:\r\n    \"\"\"管理好坦克的类\"\"\"\r\n\r\n    def __init__(self, game, settings):\r\n        self.screen = game.screen\r\n        self.settings = game.settings\r\n        self.screen_rect = self.screen.get_rect()\r\n\r\n        self.image = pygame.image.load('image/turn0good.png')\r\n        self.rect = self.image.get_rect()\r\n        self.rect.midbottom = self.screen_rect.midbottom\r\n\r\n        self.x = float(self.rect.x)\r\n        self.y = float(self.rect.y)\r\n        self.moving_right = False\r\n        self.moving_left = False\r\n        self.moving_up = False\r\n        self.moving_down = False\r\n\r\n    def update(self):\r\n        \"\"\"根据移动标志调整坦克的位置\"\"\"\r\n        if self.moving_right and self.rect.right < self.screen_rect.right:\r\n            self.rect.x += self.settings.tank_speed\r\n            self.image = pygame.image.load('image/turn90good.png')\r\n        elif self.moving_left and self.rect.left > 0:\r\n            self.rect.x -= self.settings.tank_speed\r\n            self.image = pygame.image.load('image/turn270good.png')\r\n        elif self.moving_up and self.rect.top > 0:\r\n            self.rect.y -= self.settings.tank_speed\r\n            self.image = pygame.image.load('image/turn0good.png')\r\n        elif self.moving_down and self.rect.bottom < self.screen_rect.bottom:\r\n            self.rect.y += self.settings.tank_speed\r\n            self.image = pygame.image.load('image/turn180good.png')\r\n\r\n    def blitme(self):\r\n        \"\"\"在指定位置绘制好坦克\"\"\"\r\n        self.screen.blit(self.image, self.rect)\r\n\r\n\r\nclass Game:\r\n    \"\"\"管理游戏资源和行为的类\"\"\"\r\n\r\n    def __init__(self):\r\n        pygame.init()\r\n        self.bullets = pygame.sprite.Group()\r\n        self.dic = dic\r\n        self.settings = Settings()\r\n        self.screen = pygame.display.set_mode((self.settings.screen_width, self.settings.screen_height))\r\n        self.good_tank = GoodTank(self, self.settings)\r\n        self.bullet = Bullet(self)\r\n        self.bad_tanks = pygame.sprite.Group()\r\n        self._create_fleet()\r\n\r\n    def run_game(self):\r\n        a = 1\r\n        while True:\r\n            a += 1\r\n            self._check_events()\r\n            self.good_tank.update()\r\n            self._update_bullets()\r\n            if a % 500 == 0:\r\n                a = 0\r\n                # 更新坏坦克的位置\r\n                self.bad_tanks.update()\r\n            for bullet in self.bullets.copy():\r\n                if bullet.rect.bottom <= 0 or bullet.rect.right <= 0 or bullet.rect.left >= self.settings.screen_width:\r\n                    self.bullets.remove(bullet)\r\n            self._update_screen()\r\n\r\n    def _update_bad_tanks(self):\r\n        self.bad_tanks.update()\r\n\r\n        if pygame.sprite.sprite.spritecollideany(self.good_tank, self.bad_tanks):\r\n            print('好坏坦克发生了碰撞.')\r\n\r\n    def _update_bullets(self):\r\n        \"\"\"更新子弹的位置，并删除消失的子弹\"\"\"\r\n        self.bullets.update()\r\n        for bullet in self.bullets.copy():\r\n            if bullet.rect.bottom <= 0 or bullet.rect.right <= 0 or bullet.rect.left >= self.settings.screen_width:\r\n                self.bullets.remove(bullet)\r\n        self._check_bullet_alien_collisions(self)\r\n\r\n    def _check_bullet_alien_collisions(self):\r\n        \"\"\"响应子弹和坏坦克碰撞\"\"\"\r\n        collections = pygame.sprite.groupcollide(self.bad_tanks, self.bullets, True, True)\r\n        if not collections:\r\n            self.bullets.empty()\r\n            self._create_fleet()\r\n\r\n    def _check_events(self):\r\n        \"\"\"响应按键和鼠标事件\"\"\"\r\n        for event in pygame.event.get():\r\n            match event.type:\r\n                case pygame.QUIT:\r\n                    sys.exit()\r\n                case pygame.KEYDOWN:\r\n                    match event.key:\r\n                        case pygame.K_RIGHT:\r\n                            self.good_tank.moving_right = True\r\n                            self.dic = 'right'\r\n                        case pygame.K_LEFT:\r\n                            self.good_tank.moving_left = True\r\n                            self.dic = 'left'\r\n                        case pygame.K_UP:\r\n                            self.good_tank.moving_up = True\r\n                            self.dic = 'up'\r\n                        case pygame.K_DOWN:\r\n                            self.good_tank.moving_down = True\r\n                            self.dic = 'down'\r\n                        case pygame.K_SPACE:\r\n                            self._fire_bullet()\r\n                case pygame.KEYUP:\r\n                    match event.key:\r\n                        case pygame.K_RIGHT:\r\n                            self.good_tank.moving_right = False\r\n                        case pygame.K_LEFT:\r\n                            self.good_tank.moving_left = False\r\n                        case pygame.K_UP:\r\n                            self.good_tank.moving_up = False\r\n                        case pygame.K_DOWN:\r\n                            self.good_tank.moving_down = False\r\n\r\n    def _fire_bullet(self):\r\n        new_bullet = Bullet(self)\r\n        self.bullets.add(new_bullet)\r\n\r\n    def _create_fleet(self):\r\n        \"\"\"创建坏坦克群\"\"\"\r\n        for _ in range(bad_tank_number):\r\n            bad_tank = BadTank(self, self.settings.bad_tank_speed)  # 使用Settings类中的坏坦克速度属性\r\n            self.bad_tanks.add(bad_tank)\r\n\r\n    def _update_screen(self):\r\n        \"\"\"更新屏幕上的图像，并切换到新屏幕\"\"\"\r\n        self.screen.fill(self.settings.bg_color)\r\n        self.good_tank.blitme()  # 在屏幕上绘制好坦克\r\n        for bullet in self.bullets.sprites():\r\n            bullet.draw()\r\n        self.bad_tanks.draw(self.screen)\r\n        pygame.display.flip()\r\n\r\n\r\nif __name__ == '__main__':\r\n    game = Game()\r\n    game.run_game()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision e824c18d084c0e8ae4d65fc8ed5622f8acac765b)
+++ b/main.py	(date 1732448189509)
@@ -1,12 +1,13 @@
 import random  # 导入random模块
 import sys
+import threading
 
 import pygame
 from pygame.sprite import Sprite
 
 __author__ = 'XSY'
 dic = 'up'
-bad_tank_number = 5
+bad_tank_number = 2
 
 
 class Settings:
@@ -24,7 +25,6 @@
         self.bad_tank_speed = 0.1  # 增加坏坦克的速度属性
 
 
-
 class BadTank(Sprite):
     """管理坏坦克的类"""
 
@@ -43,8 +43,8 @@
     def update(self):
         """随机移动坏坦克"""
         move_direction = random.choice(['up', 'down', 'left', 'right'])
-        random_number = random.randint(700, 800)
-        for _ in range(random_number):
+        random_number = random.randint(70, 80)
+        for _ in range(random_number * 10):
             # 移动和改变坦克图片
             if move_direction == 'up' and self.rect.top > 0:
                 self.y -= self.speed
@@ -148,26 +148,28 @@
         self._create_fleet()
 
     def run_game(self):
-        a = 1
+        bt_tank = threading.Thread(target=self._bad_tank_thread)
+        bt_tank.start()
+        self._bad_tank_thread()
+        self._main_thread()  # 他要放在最后面
+
+    def _main_thread(self):
         while True:
-            a += 1
             self._check_events()
             self.good_tank.update()
             self._update_bullets()
-            if a % 500 == 0:
-                a = 0
-                # 更新坏坦克的位置
-                self.bad_tanks.update()
+            self.bad_tanks.update()
             for bullet in self.bullets.copy():
                 if bullet.rect.bottom <= 0 or bullet.rect.right <= 0 or bullet.rect.left >= self.settings.screen_width:
                     self.bullets.remove(bullet)
+            if pygame.sprite.spritecollideany(self.good_tank, self.bad_tanks):
+                print('@')
             self._update_screen()
 
-    def _update_bad_tanks(self):
-        self.bad_tanks.update()
-
-        if pygame.sprite.sprite.spritecollideany(self.good_tank, self.bad_tanks):
-            print('好坏坦克发生了碰撞.')
+    def _bad_tank_thread(self):
+        for _ in range(bad_tank_number):
+            bad_tank = BadTank(self, self.settings)
+            self.bad_tanks.add(bad_tank)
 
     def _update_bullets(self):
         """更新子弹的位置，并删除消失的子弹"""
@@ -175,12 +177,13 @@
         for bullet in self.bullets.copy():
             if bullet.rect.bottom <= 0 or bullet.rect.right <= 0 or bullet.rect.left >= self.settings.screen_width:
                 self.bullets.remove(bullet)
-        self._check_bullet_alien_collisions(self)
+        self._check_bullet_bad_tank_collisions()
 
-    def _check_bullet_alien_collisions(self):
-        """响应子弹和坏坦克碰撞"""
-        collections = pygame.sprite.groupcollide(self.bad_tanks, self.bullets, True, True)
-        if not collections:
+    def _check_bullet_bad_tank_collisions(self):
+        """响应子弹和坏坦克的碰撞"""
+        # 检查是否有子弹击中了坏坦克
+        collisions = pygame.sprite.groupcollide(self.bad_tanks, self.bullets, True, True)
+        if not self.bad_tanks:
             self.bullets.empty()
             self._create_fleet()
 
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1731985330767)
+++ b/.gitignore	(date 1731985330767)
@@ -0,0 +1,4 @@
+/image/turn90bad.png
+/image/turn180bad.png
+/image/turn270bad.png
+/image/turn0bad.png
